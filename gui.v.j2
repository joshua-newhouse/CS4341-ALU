`include "ALU.v"

module TestBench;
	reg [15:0] in1, in2;
	wire [15:0] out, A, B;
	reg [4:0] opcode;
	reg [1:0] loadA;
	reg inv, sub, clk, rst;
	wire zero, of, neg;

	integer i;

	ALU alu(in1, in2, opcode, inv, sub, clk, rst, loadA, out, A, B, zero, of, neg);

   	initial begin
		$monitor("%d,%d,%d;", of, neg, out);
		clk = 0;
		for(i = 0; i < 5; i = i + 1) begin
			#1 clk = ~clk;
		end
	end
   
	initial begin
		for(i = 0; i < 5; i = i + 1) begin
			in1 = {{ x }};
			in2 = {{ y }};
			loadA = 2'b01;
			opcode = 5'b00000;
			#1 loadA = 2'b00;
			opcode = 5'b{{ opcode }};
			sub = {{ sub }};
			inv = {{ inv }};
		        rst = 0;
		end
	end
endmodule
